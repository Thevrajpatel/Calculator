import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Calculator extends JFrame implements ActionListener {
    private final JTextField textfield;
    private double result;
    private String operator;
    private boolean clearOnNextDigit;

    public Calculator() {
        setTitle("Calculator");
        textfield = new JTextField("0", 12);
        textfield.setEditable(false);
        textfield.setHorizontalAlignment(JTextField.RIGHT);

        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayout(4, 4, 5, 5));

        String[] buttons = {
                "7", "8", "9", "/",
                "4", "5", "6", "*",
                "1", "2", "3", "-",
                "0", ".", "=", "+"
        };

        for (String buttonText : buttons) {
            addButton(buttonPanel, buttonText);
        }

        JPanel content = new JPanel();
        content.setLayout(new BorderLayout(5, 5));
        content.add(textfield, BorderLayout.NORTH);
        content.add(buttonPanel, BorderLayout.CENTER);

        this.setContentPane(content);
        this.pack();
        this.setResizable(false);
        this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }

    private void addButton(Container container, String buttonText) {
        JButton button = new JButton(buttonText);
        button.addActionListener(this);
        container.add(button);
    }

    public void actionPerformed(ActionEvent evt) {
        String command = evt.getActionCommand();

        if ('0' <= command.charAt(0) && command.charAt(0) <= '9' || command.equals(".")) {
            if (clearOnNextDigit)
                textfield.setText("");

            clearOnNextDigit = false;
            textfield.setText(textfield.getText() + command);
        } else {
            if (clearOnNextDigit) {
                clearOnNextDigit = false;
            } else {
                calculate(Double.parseDouble(textfield.getText()));
                textfield.setText(Double.toString(result));
                clearOnNextDigit = true;
            }

            operator = command;
        }
    }

    private void calculate(double n) {
        if (operator.equals("+")) {
            result += n;
        } else if (operator.equals("-")) {
            result -= n;
        } else if (operator.equals("*")) {
            result *= n;
        } else if (operator.equals("/")) {
            result /= n;
        } else if (operator.equals("=")) {
            result = n;
        }
    }

    public static void main(String[] args) {
        Calculator calc = new Calculator();
        calc.setVisible(true);
    }
}
